name: "publish"

on:
  push:
    branches:
      - main 
      - mbudak21-CI-patches

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          # - platform: "macos-latest"
          #   args: "--target x86_64-apple-darwin"
          # - platform: "ubuntu-22.04"
          #   args: ""
          # - platform: "windows-latest"
          #   args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN  }} # Ensures proper authentication for private submodules
          submodules: recursive # Ensures submodules are initialized and updated

      # - name: Authenticate submodules
      #   run: git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
        
      # - name: Double Fetch submodules
      #   run: |
      #     git submodule sync --recursive
      #     git submodule update --init --recursive

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: latest

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: deno install

      - name: build Tauri app
        run: deno task tauri build

      # Upload the .dmg and .app.tar.gz files as GitHub release assets
      - name: Upload macOS .dmg artifact (if available)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: jester-desktop-dmg
          path: |
            src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg
            src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg

      - name: Upload macOS .app.tar.gz artifact (if available)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: jester-desktop-app
          path: |
            src-tauri/target/aarch64-apple-darwin/release/bundle/macos/*.tar.gz
            src-tauri/target/x86_64-apple-darwin/release/bundle/macos/*.tar.gz

      - name: Upload Linux and Windows artifacts
        if: matrix.platform == 'ubuntu-22.04' || matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: jester-desktop-binaries
          path: src-tauri/target/release/bundle/**/*.*

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
